<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.bootdo.learns.dao.WordsDao">

	<select id="get" resultType="com.bootdo.learns.domain.WordsDO">
		select `id`,`ewords`,`swords`,`cwords`,`tcode`,`atime` from yw_words where id = #{value}
	</select>

	<select id="list" resultType="com.bootdo.learns.domain.WordsDO">
		select `id`,`ewords`,`swords`,`cwords`,`tcode`,`atime` from yw_words
        <where>  
		  		  <if test="id != null and id != ''"> and id = #{id} </if>
		  		  <if test="ewords != null and ewords != ''"> and ewords = #{ewords} </if>
		  		  <if test="swords != null and swords != ''"> and swords = #{swords} </if>
		  		  <if test="cwords != null and cwords != ''"> and cwords = #{cwords} </if>
		  		  <if test="tcode != null and tcode != ''"> and tcode = #{tcode} </if>
		  		  <if test="btime != null and btime != ''"> and atime &gt;= #{btime} </if>
		  		  <if test="etime != null and etime != ''"> and atime &lt; #{etime} </if>
		  		</where>
        <choose>
            <when test="sort != null and sort.trim() != ''">
                order by ${sort} ${order}
            </when>
			<otherwise>
                order by id desc
			</otherwise>
        </choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>
	
	<select id="listin" resultType="com.bootdo.learns.domain.WordsDO">
		select `id`,`ewords`,`swords`,`cwords`,`tcode` from yw_words
		  <if test=" _parameter != null">
		   where   tcode in 
			<foreach item="tcode" collection="list" open="(" separator="," close=")">
				#{tcode}
			</foreach>
		</if>
		
	</select>
	
 	<select id="count" resultType="int">
		select count(*) from yw_words
		 <where>  
		  		  <if test="id != null and id != ''"> and id = #{id} </if>
		  		  <if test="ewords != null and ewords != ''"> and ewords = #{ewords} </if>
		  		  <if test="swords != null and swords != ''"> and swords = #{swords} </if>
		  		  <if test="cwords != null and cwords != ''"> and cwords = #{cwords} </if>
		  		  <if test="tcode != null and tcode != ''"> and tcode = #{tcode} </if>
		  		  <if test="btime != null and btime != ''"> and atime &gt;= #{btime} </if>
		  		  <if test="etime != null and etime != ''"> and atime &lt; #{etime} </if>
		  		</where>
	</select>
	 
	<insert id="save" parameterType="com.bootdo.learns.domain.WordsDO">
		insert into yw_words
		(
			`ewords`, 
			`swords`, 
			`cwords`, 
			`tcode`,
			`atime`
		)
		values
		(
			#{ewords}, 
			#{swords}, 
			#{cwords}, 
			#{tcode},
			#{atime}
		)
	</insert>
	 
	<update id="update" parameterType="com.bootdo.learns.domain.WordsDO">
		update yw_words 
		<set>
			<if test="ewords != null">`ewords` = #{ewords}, </if>
			<if test="swords != null">`swords` = #{swords}, </if>
			<if test="cwords != null">`cwords` = #{cwords}, </if>
			<if test="tcode != null">`tcode` = #{tcode},</if>
			<if test="atime != null">`atime` = #{atime}</if>
		</set>
		where id = #{id}
	</update>
	
	<delete id="remove">
		delete from yw_words where id = #{value}
	</delete>
	
	<delete id="batchRemove">
		delete from yw_words where id in 
		<foreach item="id" collection="array" open="(" separator="," close=")">
			#{id}
		</foreach>
	</delete>

</mapper>