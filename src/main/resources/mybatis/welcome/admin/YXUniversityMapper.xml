<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.bootdo.welcome.dao.admin.YXUniversityDao">

	<select id="findOneById" resultType="com.bootdo.welcome.domain.admin.YXUniversityDO">
		select `id`,`uv_code`,`uv_name`,`uv_sname`,`uv_description` from yx_university where id = #{value}
	</select>

	<select id="findPageListByMap" resultType="com.bootdo.welcome.domain.admin.YXUniversityDO">
		select `id`,`uv_code`,`uv_name`,`uv_sname`,`uv_description` from yx_university
        <where>  
		  		  <if test="id != null and id != ''"> and id = #{id} </if>
		  		  <if test="uvCode != null and uvCode != ''"> and uv_code = #{uvCode} </if>
		  		  <if test="uvName != null and uvName != ''"> and uv_name = #{uvName} </if>
		  		  <if test="uvSname != null and uvSname != ''"> and uv_sname = #{uvSname} </if>
		  		  <if test="uvDescription != null and uvDescription != ''"> and uv_description = #{uvDescription} </if>
		  		</where>
        <choose>
            <when test="sort != null and sort.trim() != ''">
                order by ${sort} ${order}
            </when>
			<otherwise>
                order by id desc
			</otherwise>
        </choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>
	
 	<select id="countByMap" resultType="int">
		select count(*) from yx_university
		 <where>  
		  		  <if test="id != null and id != ''"> and id = #{id} </if>
		  		  <if test="uvCode != null and uvCode != ''"> and uv_code = #{uvCode} </if>
		  		  <if test="uvName != null and uvName != ''"> and uv_name = #{uvName} </if>
		  		  <if test="uvSname != null and uvSname != ''"> and uv_sname = #{uvSname} </if>
		  		  <if test="uvDescription != null and uvDescription != ''"> and uv_description = #{uvDescription} </if>
		  		</where>
	</select>
	 
	<insert id="save" parameterType="com.bootdo.welcome.domain.admin.YXUniversityDO" useGeneratedKeys="true" keyProperty="id">
		insert into yx_university
		(
			`uv_code`, 
			`uv_name`, 
			`uv_sname`, 
			`uv_description`
		)
		values
		(
			#{uvCode}, 
			#{uvName}, 
			#{uvSname}, 
			#{uvDescription}
		)
	</insert>
	 
	<update id="updateById" parameterType="com.bootdo.welcome.domain.admin.YXUniversityDO">
		update yx_university 
		<set>
			<if test="uvCode != null">`uv_code` = #{uvCode}, </if>
			<if test="uvName != null">`uv_name` = #{uvName}, </if>
			<if test="uvSname != null">`uv_sname` = #{uvSname}, </if>
			<if test="uvDescription != null">`uv_description` = #{uvDescription}</if>
		</set>
		where id = #{id}
	</update>
	
	<delete id="removeById">
		delete from yx_university where id = #{value}
	</delete>
	
	<delete id="batchRemoveByIds">
		delete from yx_university where id in 
		<foreach item="id" collection="array" open="(" separator="," close=")">
			#{id}
		</foreach>
	</delete>

</mapper>