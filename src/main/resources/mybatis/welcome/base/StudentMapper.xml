<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.bootdo.welcome.dao.StudentDao">

	<select id="findOneById" resultType="com.bootdo.welcome.domain.StudentDO">
		select `id`,`uv_code`,`s_code`,`s_name`,`s_sex`,`s_card`,`s_exam_num`,`s_cand_num`,`s_acad_num`,`s_enter_type` from yx_student where id = #{value}
	</select>

	<select id="findPageListByMap" resultType="com.bootdo.welcome.domain.StudentDO">
		select `id`,`uv_code`,`s_code`,`s_name`,`s_sex`,`s_card`,`s_exam_num`,`s_cand_num`,`s_acad_num`,`s_enter_type` from yx_student
        <where>  
		  		  <if test="id != null and id != ''"> and id = #{id} </if>
		  		  <if test="uvCode != null and uvCode != ''"> and uv_code = #{uvCode} </if>
		  		  <if test="sCode != null and sCode != ''"> and s_code = #{sCode} </if>
		  		  <if test="sName != null and sName != ''"> and s_name = #{sName} </if>
		  		  <if test="sSex != null and sSex != ''"> and s_sex = #{sSex} </if>
		  		  <if test="sCard != null and sCard != ''"> and s_card = #{sCard} </if>
		  		  <if test="sExamNum != null and sExamNum != ''"> and s_exam_num = #{sExamNum} </if>
		  		  <if test="sCandNum != null and sCandNum != ''"> and s_cand_num = #{sCandNum} </if>
		  		  <if test="sAcadNum != null and sAcadNum != ''"> and s_acad_num = #{sAcadNum} </if>
		  		  <if test="sEnterType != null and sEnterType != ''"> and s_enter_type = #{sEnterType} </if>
		  		</where>
        <choose>
            <when test="sort != null and sort.trim() != ''">
                order by ${sort} ${order}
            </when>
			<otherwise>
                order by id desc
			</otherwise>
        </choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>
	
 	<select id="countByMap" resultType="int">
		select count(*) from yx_student
		 <where>  
		  		  <if test="id != null and id != ''"> and id = #{id} </if>
		  		  <if test="uvCode != null and uvCode != ''"> and uv_code = #{uvCode} </if>
		  		  <if test="sCode != null and sCode != ''"> and s_code = #{sCode} </if>
		  		  <if test="sName != null and sName != ''"> and s_name = #{sName} </if>
		  		  <if test="sSex != null and sSex != ''"> and s_sex = #{sSex} </if>
		  		  <if test="sCard != null and sCard != ''"> and s_card = #{sCard} </if>
		  		  <if test="sExamNum != null and sExamNum != ''"> and s_exam_num = #{sExamNum} </if>
		  		  <if test="sCandNum != null and sCandNum != ''"> and s_cand_num = #{sCandNum} </if>
		  		  <if test="sAcadNum != null and sAcadNum != ''"> and s_acad_num = #{sAcadNum} </if>
		  		  <if test="sEnterType != null and sEnterType != ''"> and s_enter_type = #{sEnterType} </if>
		  		</where>
	</select>
	 
	<insert id="save" parameterType="com.bootdo.welcome.domain.StudentDO" useGeneratedKeys="true" keyProperty="id">
		insert into yx_student
		(
			`uv_code`, 
			`s_code`, 
			`s_name`, 
			`s_sex`, 
			`s_card`, 
			`s_exam_num`, 
			`s_cand_num`, 
			`s_acad_num`, 
			`s_enter_type`
		)
		values
		(
			#{uvCode}, 
			#{sCode}, 
			#{sName}, 
			#{sSex}, 
			#{sCard}, 
			#{sExamNum}, 
			#{sCandNum}, 
			#{sAcadNum}, 
			#{sEnterType}
		)
	</insert>
	 
	<update id="updateById" parameterType="com.bootdo.welcome.domain.StudentDO">
		update yx_student 
		<set>
			<if test="uvCode != null">`uv_code` = #{uvCode}, </if>
			<if test="sCode != null">`s_code` = #{sCode}, </if>
			<if test="sName != null">`s_name` = #{sName}, </if>
			<if test="sSex != null">`s_sex` = #{sSex}, </if>
			<if test="sCard != null">`s_card` = #{sCard}, </if>
			<if test="sExamNum != null">`s_exam_num` = #{sExamNum}, </if>
			<if test="sCandNum != null">`s_cand_num` = #{sCandNum}, </if>
			<if test="sAcadNum != null">`s_acad_num` = #{sAcadNum}, </if>
			<if test="sEnterType != null">`s_enter_type` = #{sEnterType}</if>
		</set>
		where id = #{id}
	</update>
	
	<delete id="removeById">
		delete from yx_student where id = #{value}
	</delete>
	
	<delete id="batchRemoveByIds">
		delete from yx_student where id in 
		<foreach item="id" collection="array" open="(" separator="," close=")">
			#{id}
		</foreach>
	</delete>

</mapper>